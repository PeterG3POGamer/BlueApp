// Generated by view binder compiler. Do not edit!
package app.serlanventas.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.serlanventas.mobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ModalGalponBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button botonCancelar;

  @NonNull
  public final Button botonGuardar;

  @NonNull
  public final EditText inputNombreGalpon;

  @NonNull
  public final Spinner spinnerNucleo;

  private ModalGalponBinding(@NonNull LinearLayout rootView, @NonNull Button botonCancelar,
      @NonNull Button botonGuardar, @NonNull EditText inputNombreGalpon,
      @NonNull Spinner spinnerNucleo) {
    this.rootView = rootView;
    this.botonCancelar = botonCancelar;
    this.botonGuardar = botonGuardar;
    this.inputNombreGalpon = inputNombreGalpon;
    this.spinnerNucleo = spinnerNucleo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ModalGalponBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ModalGalponBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.modal_galpon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ModalGalponBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.botonCancelar;
      Button botonCancelar = ViewBindings.findChildViewById(rootView, id);
      if (botonCancelar == null) {
        break missingId;
      }

      id = R.id.botonGuardar;
      Button botonGuardar = ViewBindings.findChildViewById(rootView, id);
      if (botonGuardar == null) {
        break missingId;
      }

      id = R.id.inputNombreGalpon;
      EditText inputNombreGalpon = ViewBindings.findChildViewById(rootView, id);
      if (inputNombreGalpon == null) {
        break missingId;
      }

      id = R.id.spinnerNucleo;
      Spinner spinnerNucleo = ViewBindings.findChildViewById(rootView, id);
      if (spinnerNucleo == null) {
        break missingId;
      }

      return new ModalGalponBinding((LinearLayout) rootView, botonCancelar, botonGuardar,
          inputNombreGalpon, spinnerNucleo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
