// Generated by view binder compiler. Do not edit!
package app.serlanventas.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.serlanventas.mobile.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout buttonContainer;

  @NonNull
  public final MaterialButton buttonGoToRegister;

  @NonNull
  public final MaterialButton buttonLogin;

  @NonNull
  public final View dot1;

  @NonNull
  public final View dot2;

  @NonNull
  public final View dot3;

  @NonNull
  public final TextInputEditText editTextPassword;

  @NonNull
  public final TextInputEditText editTextUsername;

  @NonNull
  public final Guideline guidelineBottom;

  @NonNull
  public final Guideline guidelineLeft;

  @NonNull
  public final Guideline guidelineRight;

  @NonNull
  public final Guideline guidelineTop;

  @NonNull
  public final LinearLayout loadingDotsContainer;

  @NonNull
  public final ImageView logoImageView;

  @NonNull
  public final TextInputLayout passwordInputLayout;

  @NonNull
  public final TextInputLayout usernameInputLayout;

  @NonNull
  public final TextView version;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout buttonContainer, @NonNull MaterialButton buttonGoToRegister,
      @NonNull MaterialButton buttonLogin, @NonNull View dot1, @NonNull View dot2,
      @NonNull View dot3, @NonNull TextInputEditText editTextPassword,
      @NonNull TextInputEditText editTextUsername, @NonNull Guideline guidelineBottom,
      @NonNull Guideline guidelineLeft, @NonNull Guideline guidelineRight,
      @NonNull Guideline guidelineTop, @NonNull LinearLayout loadingDotsContainer,
      @NonNull ImageView logoImageView, @NonNull TextInputLayout passwordInputLayout,
      @NonNull TextInputLayout usernameInputLayout, @NonNull TextView version) {
    this.rootView = rootView;
    this.buttonContainer = buttonContainer;
    this.buttonGoToRegister = buttonGoToRegister;
    this.buttonLogin = buttonLogin;
    this.dot1 = dot1;
    this.dot2 = dot2;
    this.dot3 = dot3;
    this.editTextPassword = editTextPassword;
    this.editTextUsername = editTextUsername;
    this.guidelineBottom = guidelineBottom;
    this.guidelineLeft = guidelineLeft;
    this.guidelineRight = guidelineRight;
    this.guidelineTop = guidelineTop;
    this.loadingDotsContainer = loadingDotsContainer;
    this.logoImageView = logoImageView;
    this.passwordInputLayout = passwordInputLayout;
    this.usernameInputLayout = usernameInputLayout;
    this.version = version;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonContainer;
      ConstraintLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.buttonGoToRegister;
      MaterialButton buttonGoToRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonGoToRegister == null) {
        break missingId;
      }

      id = R.id.buttonLogin;
      MaterialButton buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.dot1;
      View dot1 = ViewBindings.findChildViewById(rootView, id);
      if (dot1 == null) {
        break missingId;
      }

      id = R.id.dot2;
      View dot2 = ViewBindings.findChildViewById(rootView, id);
      if (dot2 == null) {
        break missingId;
      }

      id = R.id.dot3;
      View dot3 = ViewBindings.findChildViewById(rootView, id);
      if (dot3 == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      TextInputEditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.editTextUsername;
      TextInputEditText editTextUsername = ViewBindings.findChildViewById(rootView, id);
      if (editTextUsername == null) {
        break missingId;
      }

      id = R.id.guideline_bottom;
      Guideline guidelineBottom = ViewBindings.findChildViewById(rootView, id);
      if (guidelineBottom == null) {
        break missingId;
      }

      id = R.id.guideline_left;
      Guideline guidelineLeft = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLeft == null) {
        break missingId;
      }

      id = R.id.guideline_right;
      Guideline guidelineRight = ViewBindings.findChildViewById(rootView, id);
      if (guidelineRight == null) {
        break missingId;
      }

      id = R.id.guideline_top;
      Guideline guidelineTop = ViewBindings.findChildViewById(rootView, id);
      if (guidelineTop == null) {
        break missingId;
      }

      id = R.id.loadingDotsContainer;
      LinearLayout loadingDotsContainer = ViewBindings.findChildViewById(rootView, id);
      if (loadingDotsContainer == null) {
        break missingId;
      }

      id = R.id.logoImageView;
      ImageView logoImageView = ViewBindings.findChildViewById(rootView, id);
      if (logoImageView == null) {
        break missingId;
      }

      id = R.id.passwordInputLayout;
      TextInputLayout passwordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordInputLayout == null) {
        break missingId;
      }

      id = R.id.usernameInputLayout;
      TextInputLayout usernameInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (usernameInputLayout == null) {
        break missingId;
      }

      id = R.id.version;
      TextView version = ViewBindings.findChildViewById(rootView, id);
      if (version == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, buttonContainer,
          buttonGoToRegister, buttonLogin, dot1, dot2, dot3, editTextPassword, editTextUsername,
          guidelineBottom, guidelineLeft, guidelineRight, guidelineTop, loadingDotsContainer,
          logoImageView, passwordInputLayout, usernameInputLayout, version);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
