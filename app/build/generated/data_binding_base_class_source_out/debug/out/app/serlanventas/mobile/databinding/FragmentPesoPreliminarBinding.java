// Generated by view binder compiler. Do not edit!
package app.serlanventas.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.serlanventas.mobile.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPesoPreliminarBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton botonProcesar;

  @NonNull
  public final MaterialButton botonVolver;

  @NonNull
  public final LinearLayout buttonLayout;

  @NonNull
  public final MaterialCardView calculationCard;

  @NonNull
  public final MaterialCardView clientDataCard;

  @NonNull
  public final TextView conPollos;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final TextView idJabas;

  @NonNull
  public final TextInputEditText inputCantPollo;

  @NonNull
  public final TextInputEditText inputDniCliente;

  @NonNull
  public final TextInputEditText inputKlPollo;

  @NonNull
  public final TextInputEditText inputNeto;

  @NonNull
  public final TextInputEditText inputNomCliente;

  @NonNull
  public final TextInputEditText inputPesoBruto;

  @NonNull
  public final TextInputEditText inputPesoPromedioPollo;

  @NonNull
  public final TextInputEditText inputTara;

  @NonNull
  public final TextInputEditText inputTotalPagar;

  @NonNull
  public final TextView numeroJabas;

  @NonNull
  public final TextView numeroPollos;

  @NonNull
  public final TextView pesoKg;

  @NonNull
  public final RecyclerView recyclerViewReportes;

  @NonNull
  public final MaterialCardView registroPesosCard;

  private FragmentPesoPreliminarBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton botonProcesar, @NonNull MaterialButton botonVolver,
      @NonNull LinearLayout buttonLayout, @NonNull MaterialCardView calculationCard,
      @NonNull MaterialCardView clientDataCard, @NonNull TextView conPollos,
      @NonNull LinearLayout headerLayout, @NonNull TextView idJabas,
      @NonNull TextInputEditText inputCantPollo, @NonNull TextInputEditText inputDniCliente,
      @NonNull TextInputEditText inputKlPollo, @NonNull TextInputEditText inputNeto,
      @NonNull TextInputEditText inputNomCliente, @NonNull TextInputEditText inputPesoBruto,
      @NonNull TextInputEditText inputPesoPromedioPollo, @NonNull TextInputEditText inputTara,
      @NonNull TextInputEditText inputTotalPagar, @NonNull TextView numeroJabas,
      @NonNull TextView numeroPollos, @NonNull TextView pesoKg,
      @NonNull RecyclerView recyclerViewReportes, @NonNull MaterialCardView registroPesosCard) {
    this.rootView = rootView;
    this.botonProcesar = botonProcesar;
    this.botonVolver = botonVolver;
    this.buttonLayout = buttonLayout;
    this.calculationCard = calculationCard;
    this.clientDataCard = clientDataCard;
    this.conPollos = conPollos;
    this.headerLayout = headerLayout;
    this.idJabas = idJabas;
    this.inputCantPollo = inputCantPollo;
    this.inputDniCliente = inputDniCliente;
    this.inputKlPollo = inputKlPollo;
    this.inputNeto = inputNeto;
    this.inputNomCliente = inputNomCliente;
    this.inputPesoBruto = inputPesoBruto;
    this.inputPesoPromedioPollo = inputPesoPromedioPollo;
    this.inputTara = inputTara;
    this.inputTotalPagar = inputTotalPagar;
    this.numeroJabas = numeroJabas;
    this.numeroPollos = numeroPollos;
    this.pesoKg = pesoKg;
    this.recyclerViewReportes = recyclerViewReportes;
    this.registroPesosCard = registroPesosCard;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPesoPreliminarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPesoPreliminarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_peso_preliminar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPesoPreliminarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.boton_Procesar;
      MaterialButton botonProcesar = ViewBindings.findChildViewById(rootView, id);
      if (botonProcesar == null) {
        break missingId;
      }

      id = R.id.boton_Volver;
      MaterialButton botonVolver = ViewBindings.findChildViewById(rootView, id);
      if (botonVolver == null) {
        break missingId;
      }

      id = R.id.buttonLayout;
      LinearLayout buttonLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonLayout == null) {
        break missingId;
      }

      id = R.id.calculationCard;
      MaterialCardView calculationCard = ViewBindings.findChildViewById(rootView, id);
      if (calculationCard == null) {
        break missingId;
      }

      id = R.id.clientDataCard;
      MaterialCardView clientDataCard = ViewBindings.findChildViewById(rootView, id);
      if (clientDataCard == null) {
        break missingId;
      }

      id = R.id.con_pollos;
      TextView conPollos = ViewBindings.findChildViewById(rootView, id);
      if (conPollos == null) {
        break missingId;
      }

      id = R.id.header_layout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.id_jabas;
      TextView idJabas = ViewBindings.findChildViewById(rootView, id);
      if (idJabas == null) {
        break missingId;
      }

      id = R.id.inputCantPollo;
      TextInputEditText inputCantPollo = ViewBindings.findChildViewById(rootView, id);
      if (inputCantPollo == null) {
        break missingId;
      }

      id = R.id.inputDniCliente;
      TextInputEditText inputDniCliente = ViewBindings.findChildViewById(rootView, id);
      if (inputDniCliente == null) {
        break missingId;
      }

      id = R.id.inputKlPollo;
      TextInputEditText inputKlPollo = ViewBindings.findChildViewById(rootView, id);
      if (inputKlPollo == null) {
        break missingId;
      }

      id = R.id.inputNeto;
      TextInputEditText inputNeto = ViewBindings.findChildViewById(rootView, id);
      if (inputNeto == null) {
        break missingId;
      }

      id = R.id.inputNomCliente;
      TextInputEditText inputNomCliente = ViewBindings.findChildViewById(rootView, id);
      if (inputNomCliente == null) {
        break missingId;
      }

      id = R.id.inputPesoBruto;
      TextInputEditText inputPesoBruto = ViewBindings.findChildViewById(rootView, id);
      if (inputPesoBruto == null) {
        break missingId;
      }

      id = R.id.inputPesoPromedioPollo;
      TextInputEditText inputPesoPromedioPollo = ViewBindings.findChildViewById(rootView, id);
      if (inputPesoPromedioPollo == null) {
        break missingId;
      }

      id = R.id.inputTara;
      TextInputEditText inputTara = ViewBindings.findChildViewById(rootView, id);
      if (inputTara == null) {
        break missingId;
      }

      id = R.id.inputTotalPagar;
      TextInputEditText inputTotalPagar = ViewBindings.findChildViewById(rootView, id);
      if (inputTotalPagar == null) {
        break missingId;
      }

      id = R.id.numero_jabas;
      TextView numeroJabas = ViewBindings.findChildViewById(rootView, id);
      if (numeroJabas == null) {
        break missingId;
      }

      id = R.id.numero_pollos;
      TextView numeroPollos = ViewBindings.findChildViewById(rootView, id);
      if (numeroPollos == null) {
        break missingId;
      }

      id = R.id.peso_kg;
      TextView pesoKg = ViewBindings.findChildViewById(rootView, id);
      if (pesoKg == null) {
        break missingId;
      }

      id = R.id.recyclerViewReportes;
      RecyclerView recyclerViewReportes = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewReportes == null) {
        break missingId;
      }

      id = R.id.registroPesosCard;
      MaterialCardView registroPesosCard = ViewBindings.findChildViewById(rootView, id);
      if (registroPesosCard == null) {
        break missingId;
      }

      return new FragmentPesoPreliminarBinding((ScrollView) rootView, botonProcesar, botonVolver,
          buttonLayout, calculationCard, clientDataCard, conPollos, headerLayout, idJabas,
          inputCantPollo, inputDniCliente, inputKlPollo, inputNeto, inputNomCliente, inputPesoBruto,
          inputPesoPromedioPollo, inputTara, inputTotalPagar, numeroJabas, numeroPollos, pesoKg,
          recyclerViewReportes, registroPesosCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
