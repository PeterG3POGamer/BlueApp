// Generated by view binder compiler. Do not edit!
package app.serlanventas.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.serlanventas.mobile.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogUpdateVersionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView appIcon;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnDownload;

  @NonNull
  public final RecyclerView changesRecyclerView;

  @NonNull
  public final TextView changesTitle;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView updateInfo;

  private DialogUpdateVersionBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView appIcon,
      @NonNull MaterialButton btnCancel, @NonNull MaterialButton btnDownload,
      @NonNull RecyclerView changesRecyclerView, @NonNull TextView changesTitle,
      @NonNull TextView title, @NonNull TextView updateInfo) {
    this.rootView = rootView;
    this.appIcon = appIcon;
    this.btnCancel = btnCancel;
    this.btnDownload = btnDownload;
    this.changesRecyclerView = changesRecyclerView;
    this.changesTitle = changesTitle;
    this.title = title;
    this.updateInfo = updateInfo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogUpdateVersionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogUpdateVersionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_update_version, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogUpdateVersionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_icon;
      ImageView appIcon = ViewBindings.findChildViewById(rootView, id);
      if (appIcon == null) {
        break missingId;
      }

      id = R.id.btn_cancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_download;
      MaterialButton btnDownload = ViewBindings.findChildViewById(rootView, id);
      if (btnDownload == null) {
        break missingId;
      }

      id = R.id.changes_recycler_view;
      RecyclerView changesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (changesRecyclerView == null) {
        break missingId;
      }

      id = R.id.changes_title;
      TextView changesTitle = ViewBindings.findChildViewById(rootView, id);
      if (changesTitle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.update_info;
      TextView updateInfo = ViewBindings.findChildViewById(rootView, id);
      if (updateInfo == null) {
        break missingId;
      }

      return new DialogUpdateVersionBinding((ConstraintLayout) rootView, appIcon, btnCancel,
          btnDownload, changesRecyclerView, changesTitle, title, updateInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
