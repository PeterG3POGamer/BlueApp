// Generated by view binder compiler. Do not edit!
package app.serlanventas.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.serlanventas.mobile.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGalponBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnEditar;

  @NonNull
  public final MaterialButton btnEliminar;

  @NonNull
  public final TextView nombreGalpon;

  @NonNull
  public final TextView nombreNucleo;

  private ItemGalponBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnEditar,
      @NonNull MaterialButton btnEliminar, @NonNull TextView nombreGalpon,
      @NonNull TextView nombreNucleo) {
    this.rootView = rootView;
    this.btnEditar = btnEditar;
    this.btnEliminar = btnEliminar;
    this.nombreGalpon = nombreGalpon;
    this.nombreNucleo = nombreNucleo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGalponBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGalponBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_galpon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGalponBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEditar;
      MaterialButton btnEditar = ViewBindings.findChildViewById(rootView, id);
      if (btnEditar == null) {
        break missingId;
      }

      id = R.id.btnEliminar;
      MaterialButton btnEliminar = ViewBindings.findChildViewById(rootView, id);
      if (btnEliminar == null) {
        break missingId;
      }

      id = R.id.nombreGalpon;
      TextView nombreGalpon = ViewBindings.findChildViewById(rootView, id);
      if (nombreGalpon == null) {
        break missingId;
      }

      id = R.id.nombreNucleo;
      TextView nombreNucleo = ViewBindings.findChildViewById(rootView, id);
      if (nombreNucleo == null) {
        break missingId;
      }

      return new ItemGalponBinding((LinearLayout) rootView, btnEditar, btnEliminar, nombreGalpon,
          nombreNucleo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
