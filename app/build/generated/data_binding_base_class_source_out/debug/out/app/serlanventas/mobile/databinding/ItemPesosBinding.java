// Generated by view binder compiler. Do not edit!
package app.serlanventas.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.serlanventas.mobile.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPesosBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnEliminar;

  @NonNull
  public final MaterialButton btnMostrar;

  @NonNull
  public final TextView documentoCliente;

  @NonNull
  public final TextView estadoCliente;

  @NonNull
  public final TextView galponName;

  @NonNull
  public final TextView nombreCliente;

  @NonNull
  public final TextView nucleoName;

  @NonNull
  public final TextView textDocumentoCliente;

  @NonNull
  public final TextView textGalponName;

  @NonNull
  public final TextView textNucleoName;

  private ItemPesosBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnEliminar,
      @NonNull MaterialButton btnMostrar, @NonNull TextView documentoCliente,
      @NonNull TextView estadoCliente, @NonNull TextView galponName,
      @NonNull TextView nombreCliente, @NonNull TextView nucleoName,
      @NonNull TextView textDocumentoCliente, @NonNull TextView textGalponName,
      @NonNull TextView textNucleoName) {
    this.rootView = rootView;
    this.btnEliminar = btnEliminar;
    this.btnMostrar = btnMostrar;
    this.documentoCliente = documentoCliente;
    this.estadoCliente = estadoCliente;
    this.galponName = galponName;
    this.nombreCliente = nombreCliente;
    this.nucleoName = nucleoName;
    this.textDocumentoCliente = textDocumentoCliente;
    this.textGalponName = textGalponName;
    this.textNucleoName = textNucleoName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPesosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPesosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pesos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPesosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEliminar;
      MaterialButton btnEliminar = ViewBindings.findChildViewById(rootView, id);
      if (btnEliminar == null) {
        break missingId;
      }

      id = R.id.btnMostrar;
      MaterialButton btnMostrar = ViewBindings.findChildViewById(rootView, id);
      if (btnMostrar == null) {
        break missingId;
      }

      id = R.id.documentoCliente;
      TextView documentoCliente = ViewBindings.findChildViewById(rootView, id);
      if (documentoCliente == null) {
        break missingId;
      }

      id = R.id.estadoCliente;
      TextView estadoCliente = ViewBindings.findChildViewById(rootView, id);
      if (estadoCliente == null) {
        break missingId;
      }

      id = R.id.galpon_name;
      TextView galponName = ViewBindings.findChildViewById(rootView, id);
      if (galponName == null) {
        break missingId;
      }

      id = R.id.nombreCliente;
      TextView nombreCliente = ViewBindings.findChildViewById(rootView, id);
      if (nombreCliente == null) {
        break missingId;
      }

      id = R.id.nucleo_name;
      TextView nucleoName = ViewBindings.findChildViewById(rootView, id);
      if (nucleoName == null) {
        break missingId;
      }

      id = R.id.text_documentoCliente;
      TextView textDocumentoCliente = ViewBindings.findChildViewById(rootView, id);
      if (textDocumentoCliente == null) {
        break missingId;
      }

      id = R.id.text_galpon_name;
      TextView textGalponName = ViewBindings.findChildViewById(rootView, id);
      if (textGalponName == null) {
        break missingId;
      }

      id = R.id.text_nucleo_name;
      TextView textNucleoName = ViewBindings.findChildViewById(rootView, id);
      if (textNucleoName == null) {
        break missingId;
      }

      return new ItemPesosBinding((LinearLayout) rootView, btnEliminar, btnMostrar,
          documentoCliente, estadoCliente, galponName, nombreCliente, nucleoName,
          textDocumentoCliente, textGalponName, textNucleoName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
