// Generated by view binder compiler. Do not edit!
package app.serlanventas.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.serlanventas.mobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReportesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton botonInsert;

  @NonNull
  public final ImageButton botonReCarga;

  @NonNull
  public final ImageButton buttonSearch;

  @NonNull
  public final EditText editTextDateFrom;

  @NonNull
  public final EditText editTextDateTo;

  @NonNull
  public final EditText editTextSearch;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final RecyclerView recyclerViewReportes;

  @NonNull
  public final LinearLayout searchLayout;

  @NonNull
  public final TextView textViewDocCliente;

  @NonNull
  public final TextView textViewFecha;

  @NonNull
  public final TextView textViewId;

  @NonNull
  public final TextView textViewSerie;

  @NonNull
  public final TextView textViewTipo;

  private FragmentReportesBinding(@NonNull LinearLayout rootView, @NonNull ImageButton botonInsert,
      @NonNull ImageButton botonReCarga, @NonNull ImageButton buttonSearch,
      @NonNull EditText editTextDateFrom, @NonNull EditText editTextDateTo,
      @NonNull EditText editTextSearch, @NonNull LinearLayout headerLayout,
      @NonNull RecyclerView recyclerViewReportes, @NonNull LinearLayout searchLayout,
      @NonNull TextView textViewDocCliente, @NonNull TextView textViewFecha,
      @NonNull TextView textViewId, @NonNull TextView textViewSerie,
      @NonNull TextView textViewTipo) {
    this.rootView = rootView;
    this.botonInsert = botonInsert;
    this.botonReCarga = botonReCarga;
    this.buttonSearch = buttonSearch;
    this.editTextDateFrom = editTextDateFrom;
    this.editTextDateTo = editTextDateTo;
    this.editTextSearch = editTextSearch;
    this.headerLayout = headerLayout;
    this.recyclerViewReportes = recyclerViewReportes;
    this.searchLayout = searchLayout;
    this.textViewDocCliente = textViewDocCliente;
    this.textViewFecha = textViewFecha;
    this.textViewId = textViewId;
    this.textViewSerie = textViewSerie;
    this.textViewTipo = textViewTipo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReportesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReportesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_reportes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReportesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.boton_Insert;
      ImageButton botonInsert = ViewBindings.findChildViewById(rootView, id);
      if (botonInsert == null) {
        break missingId;
      }

      id = R.id.boton_ReCarga;
      ImageButton botonReCarga = ViewBindings.findChildViewById(rootView, id);
      if (botonReCarga == null) {
        break missingId;
      }

      id = R.id.buttonSearch;
      ImageButton buttonSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonSearch == null) {
        break missingId;
      }

      id = R.id.editTextDateFrom;
      EditText editTextDateFrom = ViewBindings.findChildViewById(rootView, id);
      if (editTextDateFrom == null) {
        break missingId;
      }

      id = R.id.editTextDateTo;
      EditText editTextDateTo = ViewBindings.findChildViewById(rootView, id);
      if (editTextDateTo == null) {
        break missingId;
      }

      id = R.id.editTextSearch;
      EditText editTextSearch = ViewBindings.findChildViewById(rootView, id);
      if (editTextSearch == null) {
        break missingId;
      }

      id = R.id.headerLayout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.recyclerViewReportes;
      RecyclerView recyclerViewReportes = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewReportes == null) {
        break missingId;
      }

      id = R.id.searchLayout;
      LinearLayout searchLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchLayout == null) {
        break missingId;
      }

      id = R.id.textViewDocCliente;
      TextView textViewDocCliente = ViewBindings.findChildViewById(rootView, id);
      if (textViewDocCliente == null) {
        break missingId;
      }

      id = R.id.textViewFecha;
      TextView textViewFecha = ViewBindings.findChildViewById(rootView, id);
      if (textViewFecha == null) {
        break missingId;
      }

      id = R.id.textViewId;
      TextView textViewId = ViewBindings.findChildViewById(rootView, id);
      if (textViewId == null) {
        break missingId;
      }

      id = R.id.textViewSerie;
      TextView textViewSerie = ViewBindings.findChildViewById(rootView, id);
      if (textViewSerie == null) {
        break missingId;
      }

      id = R.id.textViewTipo;
      TextView textViewTipo = ViewBindings.findChildViewById(rootView, id);
      if (textViewTipo == null) {
        break missingId;
      }

      return new FragmentReportesBinding((LinearLayout) rootView, botonInsert, botonReCarga,
          buttonSearch, editTextDateFrom, editTextDateTo, editTextSearch, headerLayout,
          recyclerViewReportes, searchLayout, textViewDocCliente, textViewFecha, textViewId,
          textViewSerie, textViewTipo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
